; Задача bits02: Количество единиц
; Дана непустая последовательность ненулевых целых 32-битных чисел, за которыми следует число 0. Вывести число, в двоичном представлении которого содержится наибольшее количество единиц (если таких чисел несколько, вывести первое из них по порядку).

; В данной задаче запрещается использовать операции деления.

; Формат входных данных
; В единственной строке вводится последовательность ненулевых целых 32-битных числел, заканчивающаяся числом 0.

; Формат результата
; Вывести одно число - ответ на задачу.

%include "io.inc"
section .bss
    a resd 1
    max resd 1
section .text
    global CMAIN
CMAIN:
    mov ebx, 0

loop:
    GET_DEC 4, a        ; вводим число
    cmp dword[a], 0     ; проверяем, не равно ли оно нулю
    je loop_end         ; если равно, то выходим из цикла
    mov eax, dword[a]   ; иначе, переносим число в eax
    mov ecx, 0          ; обнуляем счетчик единиц
cycle:
    cmp eax, 0          ; проверяем, не равно ли число нулю
    je cycle_end        ; если равно, то выходим из цикла
    shr eax, 1          ; иначе, сдвигаем число вправо
    jc counter          ; если последний бит равен 1, то увеличиваем счетчик единиц
    jmp cycle           ; иначе, переходим к следующей итерации
counter:
    inc ecx             ; увеличиваем счетчик единиц
    jmp cycle           ; переходим к следующей итерации
cycle_end:
    cmp ecx, ebx        ; сравниваем счетчик единиц с максимальным
    ja reassign         ; если больше, то переносим его в ebx и число в max
    jmp loop            ; иначе, переходим к следующей итерации
reassign:               ; переносим число в max
    mov ebx, ecx        ; и счетчик единиц в ebx
    mov eax, dword[a]   ; переносим число в eax
    mov dword[max], eax ; и в max
    jmp loop            ; переходим к следующей итерации
loop_end:               ; выводим ответ
    cmp ebx, 0          ; проверяем, не равен ли счетчик нулю
    PRINT_DEC 4, [max]  ; если не равен, то выводим число
    xor eax, eax
    ret