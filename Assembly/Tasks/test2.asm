; На вход подаётся последовательность из чисел, оканчивающаяся нулем. Распечатать максимальное количество делителей, имеющихся у чисел из последовательности.
; Написать функцию int divi(int n), которая находит количество делителей числа n, оформить по соглашению cdecl 

; Пример
; Входные данные:
; 2 3 5 7 11 13 0
; Выходные данные:
; 2
; Входные данные:
; 4 6 8 9 12 0
; Входные данные:
; 6
%include 'io.inc'

section .text
    global CMAIN

; Функция divi(int n) находит количество делителей числа n
divi:
    push ebp                ; пролог
    mov ebp, esp            ; функции

    mov ebx, 1              ; ebx = количество делителей
    mov ecx, 2              ; ecx = текущий делитель

    divi_loop:
        mov eax, [ebp + 8]  ; eax = n
        cmp ecx, eax        ; если текущий делитель больше числа
        jg divi_end         ; то выходим из цикла
        xor edx, edx        ; обнуляем edx
        div ecx             ; edx = eax % ecx, eax = eax / ecx
        cmp edx, 0          ; если остаток от деления равен нулю
        jnz divi_next       ; то переходим к следующему делителю
        inc ebx             ; иначе увеличиваем количество делителей

    divi_next:
        inc ecx             ; переходим к следующему делителю
        jmp divi_loop

    divi_end:
        mov eax, ebx        ; возвращаем количество делителей

    mov esp, ebp            ; эпилог
    pop ebp                 ; функции
    ret


; Основной код программы
CMAIN:
    mov ecx, 0              ; максимальное количество делителей
    mov ebx, 0              ; текущее число

    read_loop:
        GET_DEC 4, ebx      ; считываем число
        cmp ebx, 0          ; если число равно нулю
        je read_end         ; то выходим из цикла
        push ebx            ; иначе сохраняем число на стек

        call divi           ; вызываем функцию divi
        add esp, 4          ; удаляем число со стека

        cmp ecx, eax        ; если количество делителей больше максимального
        jg read_next        ; то сохраняем новое максимальное количество делителей
        jmp read_loop

    read_next:
        mov ecx, eax        ; иначе сохраняем текущее число
        jmp read_loop

    read_end:
        PRINT_DEC 4, ecx      ; выводим максимальное количество делителей
        NEWLINE
    
    xor eax, eax
    ret